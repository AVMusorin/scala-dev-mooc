package module1

/**
 *  Реализуем тип Option
 */


 object opt {

  /**
   *
   * Реализовать тип Option, который будет указывать на присутствие либо отсутсвие результата
   */

   type Option


  /**
   *
   * Реализовать метод printIfAny, который будет печатать значение, если оно есть
   */

  /**
   *
   * реализовать метод orElse который будет возвращать другой Option, если данный пустой
   */


  /**
   *
   * Реализовать метод isEmpty, который будет возвращать true если Option не пуст и false в противном случае
   */


  /**
   *
   * Реализовать метод get, который будет возвращать значение
   */

  /**
   *
   * Реализовать метод zip, который будет создавать Option от пары значений из 2-х Option
   */


  /**
   *
   * Реализовать метод filter, который будет возвращать не пустой Option
   * в случае если исходный не пуст и предикат от значения = true
   */

 }

 object recursion {

   /**
    * Реализовать метод вычисления n!
    * n! = 1 * 2 * ... n
    */

 }

 object list {
   /**
    *
    * Реализовать односвязанный имутабельный список List
    */

   // type List


   /**
    *
    * Реализовать метод конс :: который позволит добавлять элемент в голову списка
    */


   /**
    *
    * Реализовать конструктор, для создания списка n элементов
    */


   /**
    *
    * Реализовать метод mkString который позволит красиво представить список в виде строки
    */


   /**
    *
    * Реализовать метод reverse который позволит заменить порядок элементов в списке на противоположный
    */


   /**
    *
    * Написать функцию incList котрая будет принимать список Int и возвращать список,
    * где каждый элемент будет увеличен на 1
    */


   /**
    *
    * Написать функцию shoutString котрая будет принимать список String и возвращать список,
    * где к каждому элементу будет добавлен префикс в виде '!'
    */


   /**
    *
    * Реализовать метод для списка который будет применять некую ф-цию к элементам данного списка
    */



 }